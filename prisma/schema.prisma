// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum Role {
  ADMIN
  USER
}

// Modelo de Usuario
model User {
  id             Int      @id @default(autoincrement())
  fullname       String
  email          String   @unique
  password       String
  carts          Cart[]
  tickets        Ticket[]
  emailValidated Boolean  @default(false)
  status         Boolean  @default(true)
  role           Role     @default(USER)

  @@map("user")
}

model Cart {
  id       Int      @id @default(autoincrement())
  userId   Int
  isActive Boolean  @default(true)
  tickets  Ticket[]
  User     User     @relation(fields: [userId], references: [id])

  // Relación 1 a 1 con Order
  Order Order?

  @@map("cart")
}

model Ticket {
  id        Int     @id @default(autoincrement())
  userId    Int?
  user      User?   @relation(fields: [userId], references: [id])
  concertId Int
  seatId    Int
  Cart      Cart?   @relation(fields: [cartId], references: [id])
  cartId    Int?
  Concert   Concert @relation(fields: [concertId], references: [id])
  Seat      Seat    @relation(fields: [seatId], references: [id])
  sold      Boolean @default(false)

  @@map("ticket")
}

model Order {
  id         Int   @id @default(autoincrement())
  userId     Int
  totalPrice Float @map("total_price")

  // Relación 1 a 1 con Cart
  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int  @unique

  @@map("order")
}

model Concert {
  id      Int      @id @default(autoincrement())
  name    String
  genre   String
  date    DateTime
  price   Float
  tickets Ticket[]
  img     String?

  @@map("concert")
}

model Seat {
  id      Int      @id @default(autoincrement())
  number  String
  tickets Ticket[]

  @@map("seat")
}
